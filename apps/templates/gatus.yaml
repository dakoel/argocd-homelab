---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: gatus-secret
  namespace: gatus
spec:
  encryptedData:
    telegram-id: {{ .Values.gatus.encryptedTelegramId }}
    telegram-token: {{ .Values.gatus.encryptedTelegramToken }}
  template:
    metadata:
      creationTimestamp: null
      name: gatus-secret
      namespace: gatus
    type: Opaque
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gatus
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://twin.github.io/helm-charts'
    chart: gatus
    targetRevision: {{ .Values.gatus.targetRevision }}
    helm:
      values: |
        ingress:
          enabled: true
          ingressClassName: traefik
          hosts:
            - gatus.{{ .Values.domain }}
        env:
          TELEGRAM_ID:
            valueFrom:
              secretKeyRef:
                name: gatus-secret
                key: telegram-id
          TELEGRAM_TOKEN:
            valueFrom:
              secretKeyRef:
                name: gatus-secret
                key: telegram-token
        persistence:
          enabled: true
          storageClassName: longhorn
        config:
          alerting:
            telegram:
              id: "${TELEGRAM_ID}"
              token: "${TELEGRAM_TOKEN}"
              default-alert:
                description: "Health check failed"
                send-on-resolved: true
                failure-threshold: 3
                success-threshold: 1
          endpoints:
            - name: adguard
              url: https://adguard.{{ .Values.domain }}
              conditions:
                - "[STATUS] == 200"
              client:
                insecure: true
              alerts:
                - type: telegram
            - name: argocd
              url: https://argocd.{{ .Values.domain }}
              conditions:
                - "[STATUS] == 200"
              client:
                insecure: true
              alerts:
                - type: telegram
  destination:
    server: {{ .Values.server }}
    namespace: gatus
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
