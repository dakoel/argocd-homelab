---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: grafana-secret
  namespace: monitoring
spec:
  encryptedData:
    admin-password: {{ .Values.grafana.encryptedPassword }}
    admin-user: {{ .Values.grafana.encryptedUsername }}
  template:
    metadata:
      creationTimestamp: null
      name: grafana-secret
      namespace: monitoring
    type: Opaque
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://grafana.github.io/helm-charts'
    chart: grafana
    targetRevision: {{ .Values.grafana.targetRevision }}
    helm:
      values: |
        ingress:
          enabled: true
          ingressClassName: traefik
          hosts:
            - grafana.{{ .Values.domain }}
        persistence:
          enabled: true
          storageClassName: longhorn
          size: {{ .Values.grafana.diskSize }}
        admin:
          existingSecret: grafana-secret
        sidecar:
          dashboards:
            enabled: true
            label: grafana_dashboard
            folder: /var/lib/grafana/dashboards/default
        dashboardsConfigMap:
          grafana-dashboard: "1"
        envFromSecret: telegram-secret
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              url: https://prometheus.{{ .Values.domain }}
              access: proxy
              isDefault: true
              jsonData:
                tlsSkipVerify: true
        alerting:
          contactpoints.yaml:
            secret:
              apiVersion: 1
              contactPoints:
                  - orgId: 1
                    name: Telegram
                    receivers:
                      - uid: ceccpbysa92pse
                        type: telegram
                        settings:
                          bottoken: ${telegram-token}
                          chatid: {{ quote ${telegram-id} }}
                          disable_notification: false
                          disable_web_page_preview: false
                          protect_content: false
                        disableResolveMessage: false
  destination:
    server: {{ .Values.server }}
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
